/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.listener.event;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import life.majiang.community.listener.event.QuestionRateLimiterEvent;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class QuestionRateLimiterEvent_SSTest extends QuestionRateLimiterEvent_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_setUserId_0()  throws Throwable  {
      Object object0 = new Object();
      Long long0 = new Long(1169L);
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, long0);

      //invoke method for questionRateLimiterEvent0
      questionRateLimiterEvent0.setUserId(long0);

      //invoke method for questionRateLimiterEvent0
      assertEquals(1392409281320L, questionRateLimiterEvent0.getTimestamp());
  }
  @Test(timeout = 4000)
  public void test_equals_1()  throws Throwable  {
      Object object0 = new Object();
      Long long0 = new Long(0L);
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, long0);
      boolean boolean0 = questionRateLimiterEvent0.equals(questionRateLimiterEvent0);
      assertTrue(boolean0);
  }
  @Test(timeout = 4000)
  public void test_equals_2()  throws Throwable  {
      Object object0 = new Object();
      Long long0 = new Long(0L);
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, long0);
      boolean boolean0 = questionRateLimiterEvent0.equals(object0);
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      Object object0 = new Object();
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, (Long) null);
      QuestionRateLimiterEvent questionRateLimiterEvent1 = new QuestionRateLimiterEvent(questionRateLimiterEvent0, (Long) null);
      boolean boolean0 = questionRateLimiterEvent0.equals(questionRateLimiterEvent1);
      assertTrue(boolean0);
  }
  @Test(timeout = 4000)
  public void test_equals_4()  throws Throwable  {
      Object object0 = new Object();
      Long long0 = new Long(1L);
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, long0);
      QuestionRateLimiterEvent questionRateLimiterEvent1 = new QuestionRateLimiterEvent(long0, long0);
      boolean boolean0 = questionRateLimiterEvent0.equals(questionRateLimiterEvent1);
      assertTrue(boolean0);
  }
  @Test(timeout = 4000)
  public void test_equals_5()  throws Throwable  {
      Object object0 = new Object();
      Long long0 = new Long((-4590L));
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, long0);
      QuestionRateLimiterEvent questionRateLimiterEvent1 = new QuestionRateLimiterEvent(object0, (Long) null);
      boolean boolean0 = questionRateLimiterEvent1.equals(questionRateLimiterEvent0);
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_equals_6()  throws Throwable  {
      Object object0 = new Object();
      Long long0 = new Long(2923L);
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, long0);
      QuestionRateLimiterEvent questionRateLimiterEvent1 = new QuestionRateLimiterEvent(object0, long0);
      boolean boolean0 = questionRateLimiterEvent0.equals(questionRateLimiterEvent1);
      assertTrue(boolean0);
  }
  @Test(timeout = 4000)
  public void test_toString_7()  throws Throwable  {
      Object object0 = new Object();
      Long long0 = new Long(1461L);
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent(object0, long0);
      String string0 = questionRateLimiterEvent0.toString();
      assertEquals("QuestionRateLimiterEvent(userId=1461)", string0);
  }
  @Test(timeout = 4000)
  public void test_hashCode_8()  throws Throwable  {
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent("1", (Long) null);

      //invoke method for questionRateLimiterEvent0
      questionRateLimiterEvent0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_hashCode_9()  throws Throwable  {
      Long long0 = Long.decode("1");
      QuestionRateLimiterEvent questionRateLimiterEvent0 = new QuestionRateLimiterEvent("1", long0);

      //invoke method for questionRateLimiterEvent0
      questionRateLimiterEvent0.hashCode();
  }}
