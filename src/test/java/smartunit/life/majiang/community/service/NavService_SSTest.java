/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.service;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import java.util.List;
import java.util.Stack;
import life.majiang.community.mapper.NavMapper;
import life.majiang.community.model.Nav;
import life.majiang.community.service.NavService;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class NavService_SSTest extends NavService_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_list_0()  throws Throwable  {
      NavService navService0 = new NavService();

      //prepare data for navMapper0
      Stack<Nav> stack0 = new Stack<Nav>();
      NavMapper navMapper0 = mock(NavMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(stack0).when(navMapper0).selectByExample(nullable(life.majiang.community.model.NavExample.class));

      //invoke method for navService0
      PrivateAccess.setVariable((Class<?>) NavService.class, navService0, "navMapper", (Object) navMapper0);
      List<Nav> list0 = navService0.list();
      assertTrue(list0.isEmpty());
  }}
