/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.service;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import java.util.List;
import java.util.Vector;
import life.majiang.community.mapper.AdMapper;
import life.majiang.community.model.Ad;
import life.majiang.community.service.AdService;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AdService_SSTest extends AdService_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_list_0()  throws Throwable  {
      AdService adService0 = new AdService();

      //prepare data for adMapper0
      Vector<Ad> vector0 = new Vector<Ad>(0);
      AdMapper adMapper0 = mock(AdMapper.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(vector0).when(adMapper0).selectByExample(nullable(life.majiang.community.model.AdExample.class));

      //invoke method for adService0
      PrivateAccess.setVariable((Class<?>) AdService.class, adService0, "adMapper", (Object) adMapper0);
      List<Ad> list0 = adService0.list("life.majiang.community.service.AdService");
      assertTrue(list0.isEmpty());
  }}
