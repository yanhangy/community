/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.provider;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import life.majiang.community.provider.UFileResult;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UFileResult_SSTest extends UFileResult_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_canEqual_0()  throws Throwable  {
      UFileResult uFileResult0 = new UFileResult();
      Object object0 = PrivateAccess.callMethod((Class<UFileResult>) UFileResult.class, uFileResult0, "canEqual", (Object) "1.0", (Class<?>) Object.class);
      assertEquals(false, object0);
  }
  @Test(timeout = 4000)
  public void test_setFileName_1()  throws Throwable  {
      UFileResult uFileResult0 = new UFileResult();

      //invoke method for uFileResult0
      uFileResult0.setFileName("JkT'");

      //invoke method for uFileResult0
      assertEquals("JkT'", uFileResult0.getFileName());
  }
  @Test(timeout = 4000)
  public void test_setFileUrl_2()  throws Throwable  {
      UFileResult uFileResult0 = new UFileResult();

      //invoke method for uFileResult0
      uFileResult0.setFileUrl(", fileUrl=");

      //invoke method for uFileResult0
      assertEquals(", fileUrl=", uFileResult0.getFileUrl());
  }
  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      UFileResult uFileResult0 = new UFileResult();
      boolean boolean0 = uFileResult0.equals("Q");
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_hashCode_4()  throws Throwable  {
      UFileResult uFileResult0 = new UFileResult();

      //invoke method for uFileResult0
      uFileResult0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_toString_5()  throws Throwable  {
      UFileResult uFileResult0 = new UFileResult();
      String string0 = uFileResult0.toString();
      assertEquals("UFileResult(fileName=null, fileUrl=null)", string0);
  }}
