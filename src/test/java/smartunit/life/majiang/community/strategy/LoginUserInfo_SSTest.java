/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.strategy;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import life.majiang.community.strategy.LoginUserInfo;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class LoginUserInfo_SSTest extends LoginUserInfo_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_canEqual_0()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();
      Object object0 = PrivateAccess.callMethod((Class<LoginUserInfo>) LoginUserInfo.class, loginUserInfo0, "canEqual", (Object) ", bio=", (Class<?>) Object.class);
      assertEquals(false, object0);
  }
  @Test(timeout = 4000)
  public void test_setId_1()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();
      Long long0 = new Long(428L);

      //invoke method for loginUserInfo0
      loginUserInfo0.setId(long0);

      //invoke method for loginUserInfo0
      assertEquals(428L, (long)loginUserInfo0.getId());
  }
  @Test(timeout = 4000)
  public void test_setBio_2()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();

      //invoke method for loginUserInfo0
      loginUserInfo0.setBio("0");

      //invoke method for loginUserInfo0
      assertEquals("0", loginUserInfo0.getBio());
  }
  @Test(timeout = 4000)
  public void test_setName_3()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();

      //invoke method for loginUserInfo0
      loginUserInfo0.setName(", bio=");

      //invoke method for loginUserInfo0
      assertEquals(", bio=", loginUserInfo0.getName());
  }
  @Test(timeout = 4000)
  public void test_setAvatarUrl_4()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();

      //invoke method for loginUserInfo0
      loginUserInfo0.getId();

      //invoke method for loginUserInfo0
      loginUserInfo0.setAvatarUrl("");

      //invoke method for loginUserInfo0
      assertNull(loginUserInfo0.getId());
  }
  @Test(timeout = 4000)
  public void test_equals_5()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();

      //invoke method for loginUserInfo0
      loginUserInfo0.getId();
      boolean boolean0 = loginUserInfo0.equals("1");
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_hashCode_6()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();

      //invoke method for loginUserInfo0
      loginUserInfo0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_hashCode_7()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();

      //invoke method for loginUserInfo0
      loginUserInfo0.getId();

      //invoke method for loginUserInfo0
      loginUserInfo0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_toString_8()  throws Throwable  {
      LoginUserInfo loginUserInfo0 = new LoginUserInfo();
      String string0 = loginUserInfo0.toString();
      assertEquals("LoginUserInfo(name=null, id=null, bio=null, avatarUrl=null)", string0);
  }}
