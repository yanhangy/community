/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.runtime.SmartAssertions.*;
import life.majiang.community.dto.HotTagDTO;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class HotTagDTO_SSTest extends HotTagDTO_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_setPriority_0()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();
      Integer integer0 = new Integer(1);

      //invoke method for hotTagDTO0
      hotTagDTO0.setPriority(integer0);

      //invoke method for hotTagDTO0
      assertNull(hotTagDTO0.getName());
  }
  @Test(timeout = 4000)
  public void test_canEqual_1()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();
      Object object0 = PrivateAccess.callMethod((Class<HotTagDTO>) HotTagDTO.class, hotTagDTO0, "canEqual", (Object) hotTagDTO0, (Class<?>) Object.class);
      assertEquals(true, object0);
  }
  @Test(timeout = 4000)
  public void test_setName_2()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();

      //invoke method for hotTagDTO0
      hotTagDTO0.setName("life.majiang.community.dto.HotTagDTO");

      //invoke method for hotTagDTO0
      assertNull(hotTagDTO0.getPriority());
  }
  @Test(timeout = 4000)
  public void test_equals_3()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();

      //invoke method for hotTagDTO0
      hotTagDTO0.getPriority();
      boolean boolean0 = hotTagDTO0.equals("");
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_compareTo_4()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();

      //invoke method for hotTagDTO0
      hotTagDTO0.getPriority();
      // Undeclared exception!
      try { 

        //invoke method for hotTagDTO0
        hotTagDTO0.compareTo("");
      
      } catch(Throwable e) {
         //
         // Exception Name: NullPointerException
         // no message in exception (getMessage() returned null)
         //
      }
  }
  @Test(timeout = 4000)
  public void test_hashCode_5()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();

      //invoke method for hotTagDTO0
      hotTagDTO0.getPriority();

      //invoke method for hotTagDTO0
      hotTagDTO0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_hashCode_6()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();

      //invoke method for hotTagDTO0
      hotTagDTO0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_getName_7()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();

      //invoke method for hotTagDTO0
      hotTagDTO0.getPriority();
      String string0 = hotTagDTO0.toString();
      assertEquals("HotTagDTO(name=null, priority=null)", string0);
  }
  @Test(timeout = 4000)
  public void test_getName_8()  throws Throwable  {
      HotTagDTO hotTagDTO0 = new HotTagDTO();

      //invoke method for hotTagDTO0
      hotTagDTO0.getPriority();
      String string0 = hotTagDTO0.getName();
      assertNull(string0);
  }}
