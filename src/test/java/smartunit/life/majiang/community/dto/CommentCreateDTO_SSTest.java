/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import life.majiang.community.dto.CommentCreateDTO;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CommentCreateDTO_SSTest extends CommentCreateDTO_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_canEqual_0()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();
      Object object0 = PrivateAccess.callMethod((Class<CommentCreateDTO>) CommentCreateDTO.class, commentCreateDTO0, "canEqual", (Object) "life.majiang.community.dto.CommentCreateDTO", (Class<?>) Object.class);
      assertEquals(false, object0);
  }
  @Test(timeout = 4000)
  public void test_setContent_1()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.setContent(", content=");

      //invoke method for commentCreateDTO0
      assertNull(commentCreateDTO0.getParentId());
  }
  @Test(timeout = 4000)
  public void test_setType_2()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();
      Integer integer0 = commentCreateDTO0.getType();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.setType(integer0);

      //invoke method for commentCreateDTO0
      assertNull(commentCreateDTO0.getType());
  }
  @Test(timeout = 4000)
  public void test_setParentId_3()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getParentId();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.setParentId((Long) null);

      //invoke method for commentCreateDTO0
      assertNull(commentCreateDTO0.getType());
  }
  @Test(timeout = 4000)
  public void test_equals_4()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getType();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getParentId();
      boolean boolean0 = commentCreateDTO0.equals("");
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_hashCode_5()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getType();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_hashCode_6()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getParentId();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_toString_7()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getType();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getParentId();
      String string0 = commentCreateDTO0.toString();
      assertEquals("CommentCreateDTO(parentId=null, content=null, type=null)", string0);
  }
  @Test(timeout = 4000)
  public void test_hashCode_8()  throws Throwable  {
      CommentCreateDTO commentCreateDTO0 = new CommentCreateDTO();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getType();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.getParentId();

      //invoke method for commentCreateDTO0
      commentCreateDTO0.hashCode();
  }}
