/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.life.majiang.community.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import java.util.Stack;
import java.util.Vector;
import life.majiang.community.dto.PaginationDTO;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PaginationDTO_SSTest extends PaginationDTO_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_setData_00()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();
      Stack<Object> stack0 = new Stack<Object>();
      paginationDTO0.setData(stack0);
      assertTrue(stack0.empty());
  }
  @Test(timeout = 4000)
  public void test_canEqual_01()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();
      Integer integer0 = new Integer(102);
      Object object0 = PrivateAccess.callMethod((Class<PaginationDTO>) PaginationDTO.class, (PaginationDTO) paginationDTO0, "canEqual", (Object) integer0, (Class<?>) Object.class);
      assertEquals(false, object0);
  }
  @Test(timeout = 4000)
  public void test_setTotalPage_02()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();
      Integer integer0 = Integer.valueOf(8);

      //invoke method for paginationDTO0
      paginationDTO0.setTotalPage(integer0);

      //invoke method for paginationDTO0
      assertEquals(8, (int)paginationDTO0.getTotalPage());
  }
  @Test(timeout = 4000)
  public void test_setPages_03()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();
      Vector<Integer> vector0 = new Vector<Integer>();

      //invoke method for paginationDTO0
      paginationDTO0.setPages(vector0);

      //invoke method for paginationDTO0
      assertFalse(paginationDTO0.isShowEndPage());
  }
  @Test(timeout = 4000)
  public void test_setPage_04()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();
      Integer integer0 = new Integer(0);

      //invoke method for paginationDTO0
      paginationDTO0.setPage(integer0);

      //invoke method for paginationDTO0
      assertNull(paginationDTO0.getTotalPage());
  }
  @Test(timeout = 4000)
  public void test_setShowPrevious_05()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();
      Integer integer0 = new Integer(1073741809);

      //invoke method for paginationDTO0
      paginationDTO0.isShowEndPage();

      //invoke method for paginationDTO0
      paginationDTO0.equals(integer0);

      //invoke method for paginationDTO0
      paginationDTO0.setShowPrevious(true);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowPrevious());
  }
  @Test(timeout = 4000)
  public void test_setShowEndPage_06()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();

      //invoke method for paginationDTO0
      paginationDTO0.getTotalPage();

      //invoke method for paginationDTO0
      paginationDTO0.equals((Object) null);

      //invoke method for paginationDTO0
      paginationDTO0.isShowFirstPage();

      //invoke method for paginationDTO0
      paginationDTO0.setShowEndPage(true);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowEndPage());
  }
  @Test(timeout = 4000)
  public void test_setShowNext_07()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();

      //invoke method for paginationDTO0
      paginationDTO0.isShowFirstPage();

      //invoke method for paginationDTO0
      paginationDTO0.isShowPrevious();

      //invoke method for paginationDTO0
      paginationDTO0.setShowNext(true);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowNext());
  }
  @Test(timeout = 4000)
  public void test_setShowFirstPage_08()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();

      //invoke method for paginationDTO0
      paginationDTO0.getPage();

      //invoke method for paginationDTO0
      paginationDTO0.isShowFirstPage();

      //invoke method for paginationDTO0
      paginationDTO0.setShowFirstPage(false);

      //invoke method for paginationDTO0
      assertFalse(paginationDTO0.isShowFirstPage());
  }
  @Test(timeout = 4000)
  public void test_hashCode_09()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();

      //invoke method for paginationDTO0
      paginationDTO0.getPage();

      //invoke method for paginationDTO0
      paginationDTO0.equals(paginationDTO0);

      //invoke method for paginationDTO0
      paginationDTO0.isShowNext();

      //invoke method for paginationDTO0
      paginationDTO0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_hashCode_10()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();

      //invoke method for paginationDTO0
      paginationDTO0.getPage();
      Object object0 = new Object();
      boolean boolean0 = paginationDTO0.equals(object0);
      assertFalse(boolean0);
      

      //invoke method for paginationDTO0
      paginationDTO0.isShowNext();

      //invoke method for paginationDTO0
      paginationDTO0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_hashCode_11()  throws Throwable  {
      PaginationDTO<Object> paginationDTO0 = new PaginationDTO<Object>();

      //invoke method for paginationDTO0
      paginationDTO0.isShowPrevious();

      //invoke method for paginationDTO0
      paginationDTO0.hashCode();
  }
  @Test(timeout = 4000)
  public void test_setPagination_12()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);

      //invoke method for paginationDTO0
      paginationDTO0.isShowEndPage();
      PaginationDTO<Integer> paginationDTO1 = new PaginationDTO<Integer>();

      //invoke method for paginationDTO1
      paginationDTO1.getPages();

      //invoke method for paginationDTO0
      paginationDTO0.setPagination(integer1, integer0);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowNext());
  }
  @Test(timeout = 4000)
  public void test_setPagination_13()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(59);
      PaginationDTO<Object> paginationDTO1 = new PaginationDTO<Object>();

      //invoke method for paginationDTO1
      paginationDTO1.getTotalPage();

      //invoke method for paginationDTO0
      paginationDTO0.setPagination(integer1, integer0);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowEndPage());
  }
  @Test(timeout = 4000)
  public void test_setPagination_14()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(59);

      //invoke method for paginationDTO0
      paginationDTO0.isShowPrevious();

      //invoke method for paginationDTO0
      paginationDTO0.setPagination(integer1, integer0);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowEndPage());
  }
  @Test(timeout = 4000)
  public void test_setPagination_15()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(59);

      //invoke method for paginationDTO0
      paginationDTO0.isShowPrevious();

      //invoke method for paginationDTO0
      paginationDTO0.setPagination(integer1, integer0);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowEndPage());
  }
  @Test(timeout = 4000)
  public void test_setPagination_16()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();
      Integer integer0 = new Integer(8231);

      //invoke method for paginationDTO0
      paginationDTO0.isShowNext();

      //invoke method for paginationDTO0
      paginationDTO0.isShowEndPage();

      //invoke method for paginationDTO0
      paginationDTO0.setPagination(integer0, integer0);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowPrevious());
  }
  @Test(timeout = 4000)
  public void test_setPagination_17()  throws Throwable  {
      PaginationDTO<String> paginationDTO0 = new PaginationDTO<String>();
      Integer integer0 = new Integer(Integer.MAX_VALUE);
      Integer integer1 = new Integer(Integer.MAX_VALUE);

      //invoke method for paginationDTO0
      paginationDTO0.isShowEndPage();

      //invoke method for paginationDTO0
      paginationDTO0.isShowNext();

      //invoke method for paginationDTO0
      paginationDTO0.setPagination(integer1, integer0);

      //invoke method for paginationDTO0
      assertTrue(paginationDTO0.isShowNext());
  }}
